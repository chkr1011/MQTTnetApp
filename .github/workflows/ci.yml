name: CI

on: [ push, pull_request ]

env:
  VERSION: "1.0.0.${{github.run_number}}"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: '6.0.x'

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: dotnet restore Source/MQTTnet.App.sln

      # Build applications
      - name: Build win-x86
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r win-x86 -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip win-x86 build
        uses: vimtor/action-zip@v1
        with:
          files: Source/MQTTnet.App/bin/Release/net6.0/win-x86/publish/
          dest: /MQTTnet.App-win-x86.zip

      - name: Collect win-x86 artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-win-x86
          path: /MQTTnet.App-win-x86.zip

      - name: Build win-x64
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r win-x64 -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip win-x64 build
        uses: vimtor/action-zip@v1
        with:
          files: Source/MQTTnet.App/bin/Release/net6.0/win-x64/publish/
          dest: /MQTTnet.App-win-x64.zip

      - name: Collect win-x64 artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-win-x64
          path: /MQTTnet.App-win-x64.zip

      - name: Build win-arm
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r win-arm -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip win-arm build
        uses: vimtor/action-zip@v1
        with:
          files: /home/runner/work/MQTTnet.App/MQTTnet.App/Source/MQTTnet.App/bin/Release/net6.0/win-arm/publish/
          dest: /MQTTnet.App-win-arm.zip

      - name: Collect win-arm artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-win-arm
          path: /MQTTnet.App-win-arm.zip

      - name: Build win-arm64
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r win-arm64 -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip win-arm64 build
        uses: vimtor/action-zip@v1
        with:
          files: /home/runner/work/MQTTnet.App/MQTTnet.App/Source/MQTTnet.App/bin/Release/net6.0/win-arm64/publish/
          dest: /MQTTnet.App-win-arm64.zip

      - name: Collect win-arm64 artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-win-arm64
          path: /MQTTnet.App-win-arm64.zip

      - name: Build osx-x64
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r osx-x64 -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip osx-x64 build
        uses: vimtor/action-zip@v1
        with:
          files: /home/runner/work/MQTTnet.App/MQTTnet.App/Source/MQTTnet.App/bin/Release/net6.0/osx-x64/publish/
          dest: /MQTTnet.App-osx-x64.zip

      - name: Collect osx-x64 artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-osx-x64
          path: /MQTTnet.App-osx-x64.zip

      - name: Build linux-x64
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r linux-x64 -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip linux-x64 build
        uses: vimtor/action-zip@v1
        with:
          files: /home/runner/work/MQTTnet.App/MQTTnet.App/Source/MQTTnet.App/bin/Release/net6.0/linux-x64/publish/
          dest: /MQTTnet.App-linux-x64.zip

      - name: Collect linux-x64 artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-linux-x64
          path: /MQTTnet.App-linux-x64.zip

      - name: Build linux-arm
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r linux-arm -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip linux-arm build
        uses: vimtor/action-zip@v1
        with:
          files: /home/runner/work/MQTTnet.App/MQTTnet.App/Source/MQTTnet.App/bin/Release/net6.0/linux-arm/publish/
          dest: /MQTTnet.App-linux-arm.zip

      - name: Collect linux-arm artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-linux-arm
          path: /MQTTnet.App-linux-arm.zip

      - name: Build linux-arm64
        run: dotnet publish Source/MQTTnet.App/MQTTnet.App.csproj -r linux-arm64 -p:Configuration=Release -p:PublishSingleFile=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true -property:Version=${{ env.VERSION }}

      - name: Zip linux-arm64 build
        uses: vimtor/action-zip@v1
        with:
          files: /home/runner/work/MQTTnet.App/MQTTnet.App/Source/MQTTnet.App/bin/Release/net6.0/linux-arm64/publish/
          dest: /MQTTnet.App-linux-arm64.zip

      - name: Collect linux-arm artifacts
        uses: actions/upload-artifact@v2
        with:
          name: MQTTnet.App-linux-arm64
          path: /MQTTnet.App-linux-arm64.zip

      # Release Management
      - name: Delete release drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        with:
          threshold: 1s
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          tag_name: v${{ env.VERSION }}
          generate_release_notes: true
          files: |
            /MQTTnet.App-win-x86.zip
            /MQTTnet.App-win-x64.zip
            /MQTTnet.App-win-arm.zip
            /MQTTnet.App-win-arm64.zip
            /MQTTnet.App-osx-x64.zip
            /MQTTnet.App-linux-x64.zip
            /MQTTnet.App-linux-arm64.zip
            /MQTTnet.App-linux-arm64.zip